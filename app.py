import requests
import ast

from groq import Groq
from datetime import datetime, timedelta

from flask import Flask, jsonify, request

client = Groq(
    api_key="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",
)

api_key = '4dhMFQVrFQKE5SRa8RKV4s2y5wUBdDNP0vzFm6Mt'

app = Flask(__name__)

# GET endpoint to fetch all items
@app.route('/api/groq_thinks', methods=['GET'])
def get_thinking():
    # Get current date and time
    now = datetime.now()

    # Get date and time for 2 days ago
    start_date = now - timedelta(days=2)

    # Format both the start and end dates in the required format (YYYY-MM-DDTHH:MM)
    start_formatted = start_date.strftime('%Y-%m-%dT%H')
    end_formatted = now.strftime('%Y-%m-%dT%H')

    # Output the formatted start and end
    print(f"start={start_formatted}&end={end_formatted}")

    url = f'https://api.eia.gov/v2/electricity/rto/region-sub-ba-data/data/?api_key={api_key}&frequency=hourly&data[0]=value&facets[subba][]=ZONJ&start={start_formatted}&end={end_formatted}&sort[0][column]=period&sort[0][direction]=desc&offset=0&length=5000'

    response = requests.get(url)
    data = response.json()

    # Extract the data (list of hourly energy usage)
    data = data['response']['data']
    data_sorted = sorted(data, key=lambda x: x['period'])

    # Extract the energy usage values
    values = [entry['value'] for entry in data_sorted]

    # Format the output text
    formatted_values = ", ".join(values)
    output_text = f"For the last {len(values)} hours the energy usage in New York City is {formatted_values} in megawatthours."

    # Print the formatted output
    print(output_text)

    chat_completion = client.chat.completions.create(
        messages=[
            {
                "role": "user",
                "content": f"{output_text} Based on this trend alone I want suggestions for distributing energy generated by my solar panels into three categories. How much should I supply to power the house, and how much should I allocate to charge the battery in next few days. considering my hourly average power usage is 1.3 kilo watt hour and power generation by solar panels is 3.2 kwh. I will supply the rest of the power generated by solar panels to the grid to make money. I want to maximize the money i make and being self sufficient considering future energy usages. Give Me just the suggestion and what you think, do not share the data of the energy report.",
            }
        ],
        model="llama-3.3-70b-versatile",
    )

    return jsonify({"data": chat_completion.choices[0].message.content})

@app.route('/api/groq_metrics', methods=['GET'])
def get_metrics():

    # Get current date and time
    now = datetime.now()

    # Get date and time for 2 days ago
    start_date = now - timedelta(days=2)

    # Format both the start and end dates in the required format (YYYY-MM-DDTHH:MM)
    start_formatted = start_date.strftime('%Y-%m-%dT%H')
    end_formatted = now.strftime('%Y-%m-%dT%H')

    # Output the formatted start and end
    print(f"start={start_formatted}&end={end_formatted}")

    url = f'https://api.eia.gov/v2/electricity/rto/region-sub-ba-data/data/?api_key={api_key}&frequency=hourly&data[0]=value&facets[subba][]=ZONJ&start={start_formatted}&end={end_formatted}&sort[0][column]=period&sort[0][direction]=desc&offset=0&length=5000'

    response = requests.get(url)
    data = response.json()

    # print(data)
    # Extract the data (list of hourly energy usage)
    data = data['response']['data']
    data_sorted = sorted(data, key=lambda x: x['period'])

    # Extract the energy usage values
    values = [entry['value'] for entry in data_sorted]

    # Format the output text
    formatted_values = ", ".join(values)
    output_text = f"For the last {len(values)} hours the energy usage in New York City is {formatted_values} in megawatthours."

    # Print the formatted output
    print(output_text)




    chat_completion = client.chat.completions.create(
        messages=[
            {
                "role": "user",
                "content": f"{output_text} Based on this trend alone I want suggestions for distributing energy generated by my solar panels into three categories. How much should I supply to power the house, and how much should I allocate to charge the battery in next few days. considering my hourly average power usage is 1.3 kilo watt hour and power generation by solar panels is 3.2 kwh. I will supply the rest of the power generated by solar panels to the grid to make money. I want to maximize the money i make and being self sufficient considering future energy usages. Do not explain anything just give me the the values for the three categories in a list [x,y,z].",
            }
        ],
        model="llama-3.3-70b-versatile",
    )

    response_msg = chat_completion.choices[0].message.content

    try:
        data_list = ast.literal_eval(response_msg)
        
        # Convert the list into JSON format using jsonify
        return jsonify(data_list)
    except Exception as e:
        return jsonify({"error": str(e)}), 400

if __name__ == '__main__':
    app.run(debug=True)